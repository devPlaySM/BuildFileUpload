{"version":3,"sources":["helpers/PrivateRoute.js","component/NavBar.js","calendar/firebase.js","calendar/redux/modules/schedule.js","calendar/Day.js","calendar/Datepicker.js","calendar/EditSchedule.js","calendar/Calendar.js","component/TabPanel.js","page/MainPage.js","page/LoginPage.js","App.js","reportWebVitals.js","calendar/redux/configStore.js","index.js"],"names":["PrivateRoute","Component","component","rest","token","window","sessionStorage","getItem","render","props","to","pathname","state","from","location","LogOut","removeItem","document","href","NavBar","className","type","id","onClick","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","collection","fetchFullSchedule","createAction","addSchedule","editSchedule","removeSchedule","filterThisMonth","openEditPopup","setIsFilter","schedule","createReducer","fullSchedule","thisMonthSchedule","thisMonth","isOpenEditPopup","currentSchedule","isFilter","payload","fullList","filter","sc","completed","console","log","isOpen","push","fullIdx","findIndex","s","splice","monthIdx","idx","parseInt","date","startDay","endDay","updateSchedule","data","dispatch","doc","update","then","docRef","D","styled","div","Plan","span","color","Day","dateInfo","currentSch","useDispatch","sort","a","b","time","mapToPlan","map","openPopup","title","day","Datepicker","setDate","classes","makeStyles","theme","container","display","flexWrap","justifyContent","textField","marginLeft","spacing","marginRight","width","textAlign","useStyles","noValidate","TextField","defaultValue","onChange","e","target","value","InputLabelProps","shrink","Popup","Header","Body","EditSchedule","history","useSelector","d","t","useState","slice","inputTitle","useRef","inputDescription","titleError","setTitleError","checkValid","current","length","trim","label","error","inputRef","multiline","description","rows","variant","ButtonGroup","Button","disabled","split","replaceAll","delete","catch","err","ButtonWrapper","CalendarWrapper","DateContainer","Weekend","Dow","Calendar","moment","setCurrent","useEffect","clone","startOf","format","endOf","get","docs","forEach","exists","readSchedule","onFilter","subtract","add","startWeek","week","endWeek","calendar","w","Array","fill","n","noFormatDate","fullDate","isToday","isGrayed","dow","generate","TabPanel","children","index","other","role","hidden","Box","sx","p","Typography","a11yProps","FullWidthTabs","useTheme","React","setValue","bgcolor","AppBar","position","Tabs","event","newValue","indicatorColor","textColor","Tab","axis","direction","onChangeIndex","dir","MainPage","Copyright","align","Link","Date","getFullYear","createTheme","SignInSide","apiServerURL","useContext","contextValue","frontEndServerURL","ThemeProvider","Paper","elevation","margin","maxWidth","flexGrow","Grid","height","CssBaseline","item","xs","sm","md","backgroundImage","backgroundRepeat","backgroundColor","palette","mode","grey","backgroundSize","backgroundPosition","square","my","mx","flexDirection","alignItems","Avatar","m","onSubmit","preventDefault","FormData","currentTarget","userId","password","params","URLSearchParams","append","axios","post","response","setItem","statusMsg","alert","resultMsg","mt","required","fullWidth","name","autoComplete","autoFocus","FormControlLabel","control","Checkbox","mb","createContext","protocol","host","backEndServerURL","App","path","exact","LoginPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","middlewares","thunk","enhancer","applyMiddleware","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.14885443.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n    Redirect,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\nfunction getToken() {\r\n  const tokenSession = window.sessionStorage.getItem('sessionUser');\r\n  return tokenSession;\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n\r\n    const token = getToken();\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render = {props => \r\n                token?(\r\n                    <Component {...props} />\r\n                ) : ( \r\n                    <Redirect to={{\r\n                                    pathname: '/loginPage', \r\n                                    state: {from: props.location}\r\n                                  }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default PrivateRoute;","import React from \"react\";\r\nimport {Link, NavLink} from \"react-router-dom\";\r\n\r\nconst LogOut = () => {\r\n    window.sessionStorage.removeItem('sessionUser');\r\n    document.location.href = \"/\";\r\n}\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-transparent\">\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">Dev-Play</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link active\" to=\"/\">Home</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            {window.sessionStorage.getItem('sessionUser') === null \r\n                                ? <NavLink className=\"nav-link\" to=\"/loginPage\">로그인</NavLink> \r\n                                : <NavLink className=\"nav-link\" to=\"/\" onClick = {LogOut}>로그아웃</NavLink>}\r\n                        </li>\r\n                    </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyAJVJmzWH3elZZa8smatY0FLukoxACHqHQ',\n  authDomain: 'spart-react-quiz.firebaseapp.com',\n  projectId: 'spart-react-quiz',\n  storageBucket: 'spart-react-quiz.appspot.com',\n  messagingSenderId: '804374517008',\n  appId: '1:804374517008:web:2699462fc801af477a0195',\n  measurementId: 'G-0KYJ4QL1GB'\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst firestore = firebase.firestore();\n\nexport { firestore };\n","import { createReducer, createAction } from '@reduxjs/toolkit';\nimport { firestore } from '../../firebase';\n\nconst db = firestore.collection('schedule');\n\nexport const initialState = {\n  fullSchedule: [],\n  thisMonthSchedule: [],\n  thisMonth: [],\n  isOpenEditPopup: false,\n  currentSchedule: null,\n  isFilter: false\n};\n\nexport const fetchFullSchedule = createAction('FETCH_FULL_SCHEDULE');\nexport const addSchedule = createAction('ADD_SCHEDULE');\nexport const editSchedule = createAction('EDIT_SCHEDULE');\nexport const removeSchedule = createAction('REMOVE_SCHEDULE');\nexport const filterThisMonth = createAction('FILTER_THIS_MONTH');\nexport const openEditPopup = createAction('OPEN_EDIT_POPUP');\nexport const setCurrentSchedule = createAction('SET_CURRENT_SCHEDULE');\nexport const setIsFilter = createAction('SET_IS_FILITER');\n\nconst schedule = createReducer(initialState, {\n  [fetchFullSchedule]: (state, { payload }) => {\n    state.fullSchedule = payload.fullList;\n    state.thisMonthSchedule = payload.thisMonthSchedule;\n\n    if (state.isFilter) {\n      state.thisMonth = state.thisMonthSchedule.filter((sc) => {\n        return sc.completed === true;\n      });\n    } else {\n      console.log('gg');\n      state.thisMonth = state.thisMonthSchedule;\n    }\n  },\n  [openEditPopup]: (state, { payload }) => {\n    state.isOpenEditPopup = payload.isOpen;\n    state.currentSchedule = payload.schedule;\n  },\n  [addSchedule]: (state, { payload }) => {\n    state.fullSchedule.push(payload);\n  },\n  [setIsFilter]: (state, { payload }) => {\n    state.isFilter = payload;\n  },\n  [addSchedule]: (state, { payload }) => {\n    state.fullSchedule.push(payload);\n  },\n  [editSchedule]: (state, { payload }) => {\n    const fullIdx = state.fullSchedule.findIndex((s) => s.id === payload.id);\n    state.fullSchedule.splice(fullIdx, 1, payload);\n\n    const monthIdx = state.thisMonth.findIndex((s) => s.id === payload.id);\n    state.fullSchedule.splice(monthIdx, 1, payload);\n\n    state.currentSchedule = payload;\n  },\n  [removeSchedule]: (state, { payload }) => {\n    const fullIdx = state.fullSchedule.findIndex((s) => s.id === payload.id);\n    state.fullSchedule.splice(fullIdx, 1);\n\n    const monthIdx = state.thisMonth.findIndex((s) => s.id === payload.id);\n    state.fullSchedule.splice(monthIdx, 1);\n\n    state.currentSchedule = null;\n  },\n\n  [filterThisMonth]: (state, { payload }) => {\n    state.thisMonth = state.fullSchedule.filter((sc, idx) => {\n      if (state.isFilter) {\n        return (\n          parseInt(sc.date) >= parseInt(payload.startDay) &&\n          parseInt(sc.date) <= parseInt(payload.endDay) &&\n          sc.completed === true\n        );\n      } else {\n        return (\n          parseInt(sc.date) >= parseInt(payload.startDay) &&\n          parseInt(sc.date) <= parseInt(payload.endDay)\n        );\n      }\n    });\n  }\n});\n\n// thunk\nexport const createSchedule = (data) => {\n  return (dispatch) => {\n    const saveData = { ...data, completed: false };\n    db.add(saveData).then((docRef) => {\n      let schedule = { ...saveData, id: docRef.id };\n      dispatch(addSchedule(schedule));\n    });\n  };\n};\n\nexport const readSchedule = ({ startDay, endDay }) => {\n  return (dispatch) => {\n    db.get().then((docs) => {\n      let fullList = [];\n      docs.forEach((doc) => {\n        if (doc.exists) {\n          let schedule = { ...doc.data(), id: doc.id };\n          fullList.push(schedule);\n        }\n      });\n\n      const thisMonthSchedule = fullList.filter((sc, idx) => {\n        return (\n          parseInt(sc.date) >= parseInt(startDay) &&\n          parseInt(sc.date) <= parseInt(endDay)\n        );\n      });\n\n      dispatch(fetchFullSchedule({ fullList, thisMonthSchedule }));\n    });\n  };\n};\n\nexport const updateSchedule = (data) => {\n  return (dispatch) => {\n    db.doc(data.id)\n      .update(data)\n      .then((docRef) => {\n        dispatch(editSchedule(data));\n      });\n  };\n};\n\nexport const deleteSchedule = (id) => {\n  return (dispatch) => {\n    db.doc(id)\n      .delete()\n      .then(() => {\n        dispatch(removeSchedule(id));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\nexport default schedule;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { openEditPopup } from './redux/modules/schedule';\nconst Day = ({ dateInfo, className }) => {\n  const schedule = dateInfo.currentSch;\n  const dispatch = useDispatch();\n  const openPopup = (schedule) => {\n    dispatch(openEditPopup({ isOpen: true, schedule }));\n  };\n  schedule.sort((a, b) => a.time - b.time);\n  const mapToPlan = schedule.map((s, idx) => {\n    return (\n      <Plan\n        key={idx}\n        className={`${s.completed ? 'completed' : ''}`}\n        data={s}\n        onClick={() => {\n          openPopup(s);\n        }}\n      >\n        {s.title}\n      </Plan>\n    );\n  });\n\n  return (\n    <D className={className}>\n      <span className=\"title\">{dateInfo.day}</span>\n      {mapToPlan}\n    </D>\n  );\n};\n\nconst D = styled.div`\n  padding-top: 4px;\n  height: 12vh;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  overflow: hidden;\n\n  &.grayed {\n    color: gray;\n  }\n\n  &.today > .title {\n    color: white;\n    background-color: skyblue;\n  }\n\n  & > .title {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 50%;\n    width: 30px;\n    height: 30px;\n  }\n`;\n\nconst Plan = styled.span`\n  text-align: center;\n  //background-color: ${(props) => props.color};\n  font-size: 0.8em;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin: 1px 0;\n  height: 20px;\n  width: 100%;\n  border-radius: 7px;\n  background-color: #ff9aa3;\n  color: white;\n  cursor: pointer;\n  &.completed {\n    background-color: #bfbfbf;\n  }\n`;\n\nexport default Day;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst Datepicker = ({ setDate, date }) => {\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center'\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 250,\n      textAlign: 'center'\n    }\n  }));\n  const classes = useStyles();\n  return (\n    <form className={classes.container} noValidate>\n      <TextField\n        id=\"datetime-local\"\n        type=\"datetime-local\"\n        defaultValue={date}\n        className={classes.textField}\n        onChange={(e) => {\n          setDate(e.target.value);\n        }}\n        InputLabelProps={{\n          shrink: true\n        }}\n      />\n    </form>\n  );\n};\n\nexport default Datepicker;\n","import React, { useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { MdChevronLeft } from 'react-icons/md';\nimport Datepicker from './Datepicker';\nimport { Button, TextField, makeStyles, ButtonGroup } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  deleteSchedule,\n  openEditPopup,\n  updateSchedule\n} from './redux/modules/schedule';\n\nconst EditSchedule = ({ history }) => {\n  const dispatch = useDispatch();\n  const { currentSchedule } = useSelector((state) => state.schedule);\n\n  const d = currentSchedule.date;\n  const t = currentSchedule.time;\n  const [date, setDate] = useState(\n    d.slice(0, 4) +\n      '-' +\n      d.slice(4, 6) +\n      '-' +\n      d.slice(6) +\n      'T' +\n      t.slice(0, 2) +\n      ':' +\n      t.slice(2)\n  );\n  const inputTitle = useRef();\n  const inputDescription = useRef();\n  const [titleError, setTitleError] = useState(false);\n\n  const useStyles = makeStyles((theme) => ({\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 250,\n      textAlign: 'center'\n    }\n  }));\n\n  const classes = useStyles();\n\n  const onSave = () => {\n    if (checkValid()) {\n      const yyyymmdd = date.split('T')[0].replaceAll('-', '');\n      const time = date.split('T')[1].replaceAll(':', '');\n      const title = inputTitle.current.value;\n      const description = inputDescription.current.value;\n\n      const data = {\n        date: yyyymmdd,\n        time,\n        title,\n        description,\n        id: currentSchedule.id\n      };\n\n      dispatch(updateSchedule(data));\n      dispatch(openEditPopup(false));\n    }\n  };\n\n  const checkValid = () => {\n    const title = inputTitle.current.value;\n\n    if (title.length === 0 || title.trim().length === 0) {\n      setTitleError(true);\n      return false;\n    }\n\n    return true;\n  };\n\n  const onComplete = () => {\n    const data = { ...currentSchedule, completed: true };\n    dispatch(openEditPopup(false));\n    dispatch(updateSchedule(data));\n  };\n\n  const onDelete = () => {\n    dispatch(openEditPopup(false));\n    dispatch(deleteSchedule(currentSchedule.id));\n  };\n\n  return (\n    <Popup>\n      <Header>\n        <MdChevronLeft\n          onClick={() => {\n            dispatch(openEditPopup(false));\n          }}\n        />\n        일정 보기 &nbsp;&nbsp;&nbsp;\n        <i />\n      </Header>\n      <Body>\n        <Datepicker setDate={setDate} date={date} />\n        <TextField\n          id=\"standard-basic\"\n          label=\"어떤 일정이 있나요?\"\n          defaultValue={currentSchedule.title}\n          error={titleError}\n          className={classes.textField}\n          inputRef={inputTitle}\n          onChange={(e) => {\n            //setTitle(e.target.value);\n          }}\n        />\n        <TextField\n          id=\"outlined-multiline-static\"\n          label=\"간단 메모\"\n          multiline\n          defaultValue={currentSchedule.description}\n          inputRef={inputDescription}\n          className={classes.textField}\n          rows={4}\n          variant=\"outlined\"\n          onChange={(e) => {\n            //setDescription(e.target.value);\n          }}\n        />\n        <ButtonGroup\n          color=\"secondary\"\n          aria-label=\"outlined secondary button group\"\n        >\n          <Button disabled={currentSchedule.completed} onClick={onComplete}>\n            완료\n          </Button>\n          <Button onClick={onSave}>저장</Button>\n          <Button onClick={onDelete}>삭제</Button>\n        </ButtonGroup>\n      </Body>\n    </Popup>\n  );\n};\n\nconst Popup = styled.div`\n  position: fixed;\n  background-color: #fff3f3;\n  transition: all 1s easy;\n  box-shadow: 5px 10px 20px gray;\n  border-radius: 20px;\n  /* Mobile Device */\n  @media screen and (max-width: 767px) {\n    width: 100%;\n    top: 0;\n    height: 100%;\n    box-shadow: none;\n    border-radius: 0px;\n  }\n\n  /* Tablet Device */\n  @media screen and (min-width: 768px) and (max-width: 991px) {\n    width: 350px;\n    top: 5vh;\n    left: 32vw;\n    height: 80vh;\n  }\n\n  /* Desktop Device */\n  @media screen and (min-width: 992px) {\n    top: 5vh;\n    left: 38vw;\n    width: 25vw;\n    height: 80vh;\n  }\n`;\nconst Header = styled.div`\n  height: 7vh;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 3px;\n  font-size: 1.5em;\n\n  & * {\n    color: #cccccc;\n  }\n\n  & > svg {\n    cursor: pointer;\n  }\n`;\n\nconst Body = styled.div`\n  padding-top: 6vh;\n  height: 50vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n`;\nexport default EditSchedule;\n","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport 'moment/locale/ko';\nimport styled from 'styled-components';\nimport {\n  MdChevronLeft,\n  MdChevronRight,\n  MdDehaze,\n  MdCheck,\n  MdDoneAll,\n  MdEdit\n} from 'react-icons/md';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  readSchedule,\n  setIsFilter,\n  openEditPopup\n} from './redux/modules/schedule';\nimport Day from './Day';\nimport EditSchedule from './EditSchedule';\nconst Calendar = ({ history }) => {\n  const { thisMonth, isOpenEditPopup, isFilter } = useSelector(\n    (state) => state.schedule\n  );\n  const [current, setCurrent] = useState(moment());\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const startDay = current.clone().startOf('month').format('YYYYMMDD');\n    const endDay = current.clone().endOf('month').format('YYYYMMDD');\n    dispatch(readSchedule({ startDay, endDay }));\n  }, [current, dispatch, isOpenEditPopup, isFilter]);\n\n  const movePrevMonth = () => {\n    setCurrent(current.clone().subtract(1, 'month'));\n  };\n\n  const moveNextMonth = () => {\n    setCurrent(current.clone().add(1, 'month'));\n  };\n  const goToAddSchedule = () => {\n    history.push('/addSchedule');\n  };\n  const generate = () => {\n    // 일년은 52주\n    const startWeek = current.clone().startOf('month').week();\n    const endWeek =\n      current.clone().endOf('month').week() === 1\n        ? 53\n        : current.clone().endOf('month').week();\n\n    // 날짜\n    let calendar = [];\n\n    for (let w = startWeek; w <= endWeek; w++) {\n      calendar.push(\n        <Weekend key={w}>\n          {Array(7)\n            .fill(0)\n            .map((n, idx) => {\n              const noFormatDate = current\n                .clone()\n                .startOf('year')\n                .week(w)\n                .startOf('week')\n                .add(idx, 'day');\n\n              const day = noFormatDate.format('D');\n              const fullDate = noFormatDate.format('l').replaceAll('.', '');\n              const isToday =\n                noFormatDate.format('YYYYMMDD') === moment().format('YYYYMMDD')\n                  ? 'today'\n                  : '';\n              const isGrayed =\n                noFormatDate.format('MM') === current.format('MM')\n                  ? ''\n                  : 'grayed';\n\n              const currentSch = thisMonth.filter((s) => {\n                return s.date === fullDate;\n              });\n\n              const dateInfo = { day, fullDate, dow: idx, currentSch };\n              return (\n                <Day\n                  key={n + idx}\n                  dateInfo={dateInfo}\n                  className={`${isGrayed} ${isToday}`}\n                />\n              );\n            })}\n        </Weekend>\n      );\n    }\n    return calendar;\n  };\n\n  const onFilter = (isFilter) => {\n    dispatch(setIsFilter(isFilter));\n  };\n\n  return (\n    <div>\n      <CalendarWrapper>\n        {isOpenEditPopup && <EditSchedule />}\n        <Header>\n          <MdChevronLeft\n            className=\"dir\"\n            onClick={movePrevMonth}\n          ></MdChevronLeft>\n          <span>{current.format('MMMM')}</span>\n          <MdChevronRight\n            className=\"dir\"\n            onClick={moveNextMonth}\n          ></MdChevronRight>\n        </Header>\n        <DateContainer>\n          <Weekend>\n            <Dow color=\"#ff4b4b\">\n              <span>S</span>\n            </Dow>\n            <Dow>\n              <span>M</span>\n            </Dow>\n            <Dow>\n              <span>T</span>\n            </Dow>\n            <Dow>\n              <span>W</span>\n            </Dow>\n            <Dow>\n              <span>T</span>\n            </Dow>\n            <Dow>\n              <span>F</span>\n            </Dow>\n            <Dow color=\"#4b87ff\">\n              <span>S</span>\n            </Dow>\n          </Weekend>\n          {generate()}\n        </DateContainer>\n      </CalendarWrapper>\n      <ButtonWrapper\n        onClick={() => {\n          dispatch(openEditPopup(false));\n        }}\n      >\n        {isFilter ? (\n          <MdCheck\n            onClick={() => onFilter(false)}\n            className={'filterBtn subBtn'}\n          />\n        ) : (\n          <MdDoneAll\n            onClick={() => onFilter(true)}\n            className={'filterBtn subBtn'}\n          />\n        )}\n        <MdEdit onClick={goToAddSchedule} className={'writeBtn subBtn'} />\n        <MdDehaze className={'menuBtn'} />\n      </ButtonWrapper>\n    </div>\n  );\n};\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  left: 90vw;\n  top: 60vh;\n  text-align: center;\n  padding-bottom: 3px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  overflow: hidden;\n  height: 150px;\n\n  &:hover .subBtn {\n    opacity: 1;\n    visibility: visible;\n    top: 0;\n  }\n\n  & > svg {\n    cursor: pointer;\n\n    border-radius: 50%;\n    color: white;\n    width: 25px;\n    height: 25px;\n    padding: 10px;\n\n    &.filterBtn {\n      background-color: pink;\n      z-index: 1;\n      transition: all 0.4s ease;\n    }\n\n    &.writeBtn {\n      background-color: skyblue;\n      z-index: 2;\n      transition: all 0.5s ease;\n    }\n\n    &.menuBtn {\n      background-color: #ffdb0d;\n      z-index: 3;\n    }\n\n    &.subBtn {\n      opacity: 0;\n      visibility: hidden;\n      top: 60px;\n      position: relative;\n    }\n  }\n`;\n\nconst CalendarWrapper = styled.div`\n  position: relative;\n`;\n\nconst Header = styled.div`\n  height: 7vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 3px;\n  font-size: 1.5em;\n\n  & > span {\n    margin: 0 100px;\n  }\n  & > .dir {\n    color: #cccccc;\n\n    &:hover {\n      cursor: pointer;\n    }\n  }\n`;\n\nconst DateContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 1vw;\n`;\n\nconst Weekend = styled.div`\n  display: flex;\n`;\n\nconst Dow = styled.div`\n  border-bottom: 1px solid gray;\n  width: 100%;\n  height: 35px;\n  color: ${(props) => (props.color ? props.color : 'black')};\n  text-align: center;\n  & span {\n  }\n`;\n\nexport default Calendar;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport Calendar from '../calendar/Calendar';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function FullWidthTabs() {\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ bgcolor: 'background.paper', width: '100%' }}>\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"secondary\"\r\n          textColor=\"inherit\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"full width tabs example\"\r\n        >\r\n          <Tab label=\"캘린더\" {...a11yProps(0)} />\r\n          <Tab label=\"화상 회의\" {...a11yProps(1)} />\r\n          <Tab label=\"채 팅\" {...a11yProps(2)} />\r\n          <Tab label=\"고객 센터\" {...a11yProps(3)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <SwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabPanel value={value} index={0} dir={theme.direction}>\r\n          <Calendar />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n          화상으로 무엇을 할 수 있을까...\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2} dir={theme.direction}>\r\n          오픈채팅 같은 자유로운 채팅 어때? (+ 챗봇)\r\n        </TabPanel>\r\n        <TabPanel value={value} index={3} dir={theme.direction}>\r\n          궁금해?\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport TabPanel from \"../component/TabPanel\";\r\n\r\nconst MainPage = () => {\r\n    return (\r\n        <>\r\n            <h1 className=\"mt-3 mb-5\">놀기 위한 개발자</h1>\r\n            <TabPanel />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MainPage;","import React, { useContext } from 'react';\r\nimport { contextValue } from \"../App\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport axios from 'axios';\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href={\"http://devplay.duckdns.org/\"}>\r\n        DevPlay\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function SignInSide() {\r\n\r\n    // global 변수에서 주소 가져오기\r\n    const { frontEndServerURL } = useContext(contextValue);\r\n    const apiServerURL = frontEndServerURL + \":2780\";\r\n\r\n    const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const data = new FormData(event.currentTarget);\r\n    const userId = data.get('id');\r\n    const password = data.get('password');\r\n    const sessionRemember = data.get('session');\r\n\r\n        \r\n    var params = new URLSearchParams();\r\n    params.append('userId', userId);\r\n    params.append('password', password);\r\n\r\n    axios.post(apiServerURL + '/api/user/login', params)\r\n        .then(response => {\r\n            if (sessionRemember) {\r\n                \r\n            } \r\n            window.sessionStorage.setItem('sessionUser', response.data.statusMsg);\r\n            alert(response.data.resultMsg);\r\n            document.location.href = \"/\";     \r\n        })\r\n        .catch(error => {\r\n            console.log(error.response);\r\n            alert(error.response.data.resultMsg);\r\n        });\r\n    };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n        <Paper elevation={3} sx={{ p: 2, margin: 'auto', maxWidth: 1500, flexGrow: 1 }}>\r\n            <Grid container component=\"main\" sx={{ height: '96.5vh' }}>\r\n                <CssBaseline />\r\n                <Grid\r\n                item\r\n                xs={false}\r\n                sm={4}\r\n                md={7}\r\n                sx={{\r\n                    backgroundImage: 'url(https://source.unsplash.com/random)',\r\n                    backgroundRepeat: 'no-repeat',\r\n                    backgroundColor: (t) =>\r\n                    t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\r\n                    backgroundSize: 'cover',\r\n                    backgroundPosition: 'center',\r\n                }}\r\n                />\r\n                <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <Box\r\n                    sx={{\r\n                    my: 15,\r\n                    mx: 4,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign in\r\n                    </Typography>\r\n                    <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"id\"\r\n                            label=\"ID\"\r\n                            name=\"id\"\r\n                            autoComplete=\"id\"\r\n                            autoFocus\r\n                        />\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Checkbox value=\"true\" color=\"primary\" name=\"session\" />}\r\n                            label=\"Remember me\"\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{ mt: 3, mb: 2 }}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                        <Grid container>\r\n                            <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n                            </Link>\r\n                            </Grid>\r\n                            <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Copyright sx={{ mt: 5 }} />\r\n                    </Box>\r\n                </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    </ThemeProvider>\r\n  );\r\n}","import React from 'react';\nimport { createContext } from \"react\";\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport PrivateRoute from './helpers/PrivateRoute';\nimport NavBar from './component/NavBar';\nimport MainPage from './page/MainPage';\nimport LoginPage from './page/LoginPage';\n\n// global 변수\nexport const contextValue = createContext({\n  frontEndServerURL: window.location.protocol + \"//\" + window.location.host,\n  backEndServerURL: \"http://129.154.210.101:2780\"\n});\n\nconst App = () => {\n\n  return (\n\n    <Router>  \n      <div className=\"App\">\n        <Switch>\n          {/* NavBar 가 필요없는 페이지 */}\n          <Route path=\"/loginPage\" exact component = {LoginPage} />\n\n          {/* NavBar 가 필요한 페이지 */}\n          <>\n            <NavBar />\n            <PrivateRoute path=\"/\" exact component = {MainPage} />\n          </>\n\n        </Switch>\n      </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport schedule from './modules/schedule';\n//import { createBrowserHistory } from 'history';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n//export const history = createBrowserHistory();\n\nconst middlewares = [thunk];\nconst enhancer = applyMiddleware(...middlewares);\n\nconst rootReducer = combineReducers({ schedule });\n\nconst store = createStore(rootReducer, composeWithDevTools(enhancer));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './calendar/redux/configStore';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}